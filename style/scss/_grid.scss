$header-color: #b2e7e8;
$content-color: #304d63;
$nav-color: #f2d096;
$footer-color: #ed8975;
$white: #fff;

h1 {
  height: 28px;
  margin-bottom: 40px;
}

.text-box {
  margin-bottom: 40px;

  p {
    font-size: 18px;
    margin-bottom: 10px;
  }
}

.example {
  margin-bottom: 40px;

  .container {
    display: grid;
    grid-gap: 10px; //column-gap, row-gap 같이 써줄때
    grid-template-columns: 250px 250px 250px; //각 width 값을 설정 할 수 있다.
    grid-template-rows: 100px 50px 300px;

    .item {
      align-items: center;
      background-color: $header-color;
      color: $white;
      display: flex;
      font-size: 50px;
      justify-content: center;
    }
  }
}

.grid {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: repeat(4, 100px);

  .header {
    align-items: center;
    background-color: $header-color;
    color: $white;
    display: flex;
    font-size: 20px;
    grid-column-end: 5;
    grid-column-start: 1; //라인이 1에서 시작해서 5로 끝남
    justify-content: center;
  }

  .content {
    align-items: center;
    background-color: $content-color;
    color: $white;
    display: flex;
    font-size: 20px;
    grid-column: 1 / 4;
    // grid-row: 2 / 4;
    grid-row: 2 / span 4; //시작점을 지정해주고 그다음에 span으로 공간주기
    justify-content: center;
  }

  .nav {
    align-items: center;
    background-color: $nav-color;
    color: $white;
    display: flex;
    font-size: 20px;
    grid-row: 2 / 4;
    justify-content: center;

  }

  .footer {
    align-items: center;
    background: $footer-color;
    color: $white;
    display: flex;
    font-size: 20px;
    grid-column: 1 / 5; 
    //grid-column: 1 / -1; 로 사용 할 수도 있음.  끝이 어디서 끝나는지만 알면 됨. 끝이 어딘지는 알 필요가 없다. 

    // span 4 ---> 얼마나 많은 cell을 갖고 있는지(?) span으로 가능! 공간 4개를 가지고 있다는 뜻임 , header에도 적용 가능
    justify-content: center;
  }
}
